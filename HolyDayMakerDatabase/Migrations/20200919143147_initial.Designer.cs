// <auto-generated />
using System;
using HolyDayMakerDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HolyDayMakerDatabase.Migrations
{
    [DbContext(typeof(HolyDayMakerDatabaseContext))]
    [Migration("20200919143147_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<int>("UserID");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Extra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.ToTable("Extra");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL");

                    b.Property<string>("Name");

                    b.Property<string>("NumberOfBeds");

                    b.Property<string>("Place");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.UserBooking", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("BookingID");

                    b.Property<int>("ID");

                    b.HasKey("UserID", "BookingID");

                    b.HasAlternateKey("ID");

                    b.ToTable("UserBooking");
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Account", b =>
                {
                    b.HasOne("HolyDayMakerDatabase.Models.User")
                        .WithOne("Account")
                        .HasForeignKey("HolyDayMakerDatabase.Models.Account", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HolyDayMakerDatabase.Models.Booking", b =>
                {
                    b.HasOne("HolyDayMakerDatabase.Models.User")
                        .WithOne("Booking")
                        .HasForeignKey("HolyDayMakerDatabase.Models.Booking", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
